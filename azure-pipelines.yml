# ASP.NET Core (.NET Framework)

# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  MSBUILDSINGLELOADCONTEXT: '1'
 
steps:
- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: 5.8
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    
#- task: MSBuild@1
#  inputs:
#        solution: '**/*.sln'
        
- task: VSBuild@1
  inputs:
    solution: '**\*.sln'
    vsVersion: '16.0'
    restoreNugetPackages: true

#- task: MSBuild@1
#  inputs:
#    solution: '**/*.sln'
#    msbuildVersion: '12.0'
#    msbuildArchitecture: 'x64'
#- task: DotNetCoreCLI@2
#  inputs:
#    command: 'build'

#- task: VSTest@2
#  inputs:
#     testSelector: 'testAssemblies'
#     testAssemblyVer2: |
#       **\*Outside.OrderStreamSync.dll
#       !**\*TestAdapter.dll
#       !**\obj\**
#     searchFolder: '$(System.DefaultWorkingDirectory)'
#     vsTestVersion: '16.0'
    
- task: VisualStudioTestPlatformInstaller@1
  inputs:
    packageFeedSelector: 'nugetOrg'
    versionSelector: 'latestPreRelease'
- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*test*.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
#- task: DotNetCoreCLI@2
#  inputs:
#    command: 'test'
    
#- task: VSTest@2
#  inputs:
#     testSelector: 'testAssemblies'
#     testAssemblyVer2: |
#      **\*test*.dll
#      !**\*TestAdapter.dll
#      !**\obj\**
#     searchFolder: '$(System.DefaultWorkingDirectory)'

#- task: ArchiveFiles@2
#  inputs:
#    rootFolderOrFile: '$(Build.BinariesDirectory)'
#    includeRootFolder: true
#    archiveType: 'zip'
#    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

#- task: PublishTestResults@2
#  inputs:
#    testResultsFormat: 'JUnit'
#    testResultsFiles: '**/TEST-*.xml'